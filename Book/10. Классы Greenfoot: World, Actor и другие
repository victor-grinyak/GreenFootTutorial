Среда Greenfoot предоставляет нам набор классов Java для создания простых игр, полный список которых: 
	Actor — где Actor является объектом мира Greenfoot;
	Greenfoot – класс, предоставляющий набор дополнительных функций для управления и взаимодействия с системой;
	GreenfootImage – класс, отвечающий за отрисовку изображений на экране;
	GreenfootSound – класс для управления звуком;
	MouseInfo – класс хранящий информацию о текущем состоянии мыши;
	Класс World – это мир, в котором «живут» объекты класса Actor.



Класс Actor
------------------------------------------------------------------------------------------------------------------------
Каждый объект данного класса хранит в себе текущее положение в мире, в котором он находится, также имеет свою иконку.
Все объекты которые должны быть отображены в игровом мире, являются наследниками данного класса, то есть его подклассами. Каждый подкласс может определять свое собственное отображение в мире и, соответственно, поведение.

Важной особенностью данного класса является наличие метода «act» (с англ. - действие). Данный метод вызывается в тот момент, когда кнопки «Аct» или «Run» на панели Greenfoot были активированы пользователем. В классе Actor данный метод ( «act()» ) является пустым, и каждый подкласс предоставляет его собственное определение.

Основные методы отвечающие за положение объекта в игровом мире:
	getX() - возвращает координату по оси X;
	getY() - возвращает координату по оси Y;
	setLocation(int x, int y) — переносит объект в точку (x, y);
	turn(int amount) – поворачивает объект на определенное количество градусов относительно текущего поворота, то есть увеличивает или уменьшает данный угол поворота;
	move(int distance) – перемещает объект на расстояние «distance»;
	turnTowards(int x, int y) – поворачивает объект в сторону точки (x,y);

Отображение объекта на экране: 
	setImage(java.lang.String filename) – устанавливает графическое изображение, хранящееся в папке проекта с именем «filename», которое будет отображаться на экране по координатам объекта.


Класс Greenfoot
------------------------------------------------------------------------------------------------------------------------
Основные функции данного класса это — события с клавиатуры. Методы getKey() и isKeyDown() используются для этого  и они также возвращают/распознают следующие имена клавиш:
	«a», «b», …, «z» (буквы английского алфавита), «0»..«9», также getKey() может возвращать символы в верхнем или нижнем регистрах;
	«up», «down», «left», «right» (стрелки на клавиатуре);
	«enter», «space», «tab», «escape», «backspace», «shift», «control»
«F1», «F2», … «F12»
	
	
	
Класс GreenfootImage
------------------------------------------------------------------------------------------------------------------------
Изображения могут быть загружены из файла и/или нарисованы с использованием представленных функций рисования. Поддерживаются следующие форматы: JPEG, GIF и PNG.



Класс GreenFootSound
------------------------------------------------------------------------------------------------------------------------
Звуки могут быть загружены из аудио-файлов следующих форматов: AIFF, AU, WAV, MP3 and MIDI. Звук не может быть воспроизведен одновременно несколько раз, но может проигрываться последовательно.

Основные методы для работы со звуковым файлом:
	getVolume() - возвращает текущий уровень звука в промежутке от 0 (нет звука) до 100 (самый громкий);
	isPlaying() - True, если звук воспроизводится в данный момент;
	pause() – приостанавливает воспроизведение звука;
	play() – воспроизведение звука;
	playLoop() – воспроизведение звука по циклу;
	setVolume(int level) – устанавливает уровень звука в промежутке от 0 до 100;
	stop() – останавливает воспроизведение.
	


Класс MouseInfo
------------------------------------------------------------------------------------------------------------------------
Получение текущего состояния мыши производится вызовом метода Greenfoot.getMouseInfo()

Методы:
	getActor() – возвращает объект класса Actor, с которым связано действие мыши;
	getButton() – возвращает номер нажатой кнопки мыши;
	getX() – возвращает положение мыши по координате X;
	getY() – возвращает положение мыши по координате Y;



Класс World
------------------------------------------------------------------------------------------------------------------------
Данный мир представлен двумерной сеткой ячеек.
Все объекты, привязанные к данному миру, могут получить доступ к объекту класса World. Размер ячеек может быть задан при создании мира и не изменяется в процессе выполнения сценария. Простые сценарии могут иметь крупные ячейки для отображения объекта в ней. Более сложные сценарии могут уже иметь мелкие ячейки (до 1 пикселя) для достижения более точного положения объекта и плавной анимации.
Фон может быть украшен с помощью изображений или другими методами рисования.
Размеры мира задаются в конструкторе данного класса: World(int worldWidth, int worldWidth, int cellSize), где  worldWidth — ширина игрового поля,  worldWidth – высота, и  cellSize – размер ячейки в пикселях.
Так же как и класс Actor имеет метод «act()».
Для добавления объектов используется метод addObject(Actor object, int x, int y).
