В данной главе рассматривается, как применяются условные операторы if, if-else и switch.

    Конструкция if/else.
Оператор if проверяет истинность некоторого условия и в зависимости от результатов проверки выполняет определенный код:

int num1 = 6;
int num2 = 4;
if(num1  >num2) {
  System.out.println("Первое число больше второго");
}

После ключевого слова if ставится условие. Если это условие выполняется, то срабатывает код, который помещен в далее в блоке if после фигурных скобок. В качестве условий выступает операция сравнения двух чисел. Так как, в данном случае, первое число больше второго, то выражение num1 > num2 истинно и возвращает значение true. Следовательно, управление переходит в блок кода после фигурных скобок и начинает выполнять содержащиеся там инструкции, а конкретно метод System.out.println("Первое число больше второго");. Если бы первое число оказалось бы меньше второго или равно ему, то инструкции в блоке if не выполнялись бы.

Также мы можем соединить сразу несколько условий, используя логические операторы:

int num1 = 8;
int num2 = 6;
if(num1 > num2 && num1>7) {
  System.out.println("Первое число больше второго и больше 7");
}

Здесь блок if будет выполняться, если num1 > num2 равно true и одновременно num1 > 7 равно true.

Если мы хотим, чтобы при несоблюдении условия также выполнялись какие-либо действия, можем добавить блок else:

int num1 = 6;
int num2 = 4;
if(num1 > num2) {
  System.out.println("Первое число больше второго");
}
else {
  System.out.println("Первое число меньше второго");
}

При сравнении чисел мы можем насчитать три состояния: первое число больше второго, первое число меньше второго и числа равны. С помощью выражения else if, можно обрабатывать дополнительные условия:

int num1 = 6;
int num2 = 8;
if(num1 > num2) {
  System.out.println("Первое число больше второго");
}
else if(num1 < num2) {	
  System.out.println("Первое число меньше второго");
}
else {
  System.out.println("Числа равны");
}

    Конструкция switch

Конструкция switch/case аналогична конструкции if/else, так как позволяет обработать сразу несколько условий:

int num = 8;
switch(num) {    
    case 1: 
        System.out.println("число равно 1");
        break;
    case 8: 
        System.out.println("число равно 8");
        num++;
        break;
    case 9: 
        System.out.println("число равно 9");
        break;
    default:
        System.out.println("число не равно 1, 8, 9");
}

После ключевого слова switch в скобках идет сравниваемое выражение. Значение этого выражения последовательно сравнивается со значениями, помещенными после оператора сase. Если совпадение будет найдено, то будет выполняться определенный блок сase. В конце блока сase ставится оператор break, чтобы избежать выполнения других блоков. Например, если бы убрали бы оператор break в следующем случае:

case 8: 
    System.out.println("число равно 8");
    num++;
case 9: 
    System.out.println("число равно 9");
    break;
    
то, так как у нас переменная num равна 8, выполнится блок case 8. Но в этом блоке переменная num увеличивается на единицу, а оператор break отсутствует, тогда начнет выполняться блок case 9.

Если мы хотим также обработать ситуацию, когда совпадения не будет найдено, то можно добавить блок default, как в примере выше.
